name: Train model
inputs:
- {name: dataset, type: Dataset}
- {name: target, type: String}
outputs:
- {name: model, type: Model}
implementation:
  container:
    image: us-central1-docker.pkg.dev/continual-dev/azure-vm-rf/vertex-azure-vm-rf-dbt@sha256:dfbd9ec672c2854fb811f62a934aafd776079b94a659e05262f32097a03e044b
    command:
    - sh
    - -c
    - |2

      if ! [ -x "$(command -v pip)" ]; then
          python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
      fi

      PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'pandas' 'scikit-learn' 'kfp==1.8.14' && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp -d)
      printf "%s" "$0" > "$program_path/ephemeral_component.py"
      python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
    - "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing\
      \ import *\n\ndef train_model(\n    dataset: Input[Dataset],\n    target: str,\n\
      \    model: Output[Model],\n):\n\n    from sklearn.ensemble import RandomForestClassifier\n\
      \    import pandas as pd\n    import pickle\n\n    data = pd.read_csv(dataset.path+\"\
      .csv\")\n    model_rf = RandomForestClassifier(n_estimators=10)\n    model_rf.fit(\n\
      \        data.drop(columns=[target]),\n        data[target],\n    )\n    model.metadata[\"\
      framework\"] = \"RF\"\n    file_name = model.path + f\".pkl\"\n    with open(file_name,\
      \ 'wb') as file:  \n        pickle.dump(model_rf, file)\n\n"
    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - train_model
